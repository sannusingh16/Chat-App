{"version":3,"sources":["misc/firebase.js","context/profile.context.js","Components/PrivateRoute.js","Components/PublicRoute.js","Components/Editinput.js","Components/DashBoard/ProvideBlock.js","misc/helper,.js","Components/DashBoard/Avatardisplay.js","misc/Customhook.js","Components/DashBoard/Avatarbtn.js","Components/DashBoard/index.js","Components/DashBoard/DashboardToggle.js","Components/Chatroombutton.js","context/room.context.js","Components/Rooms/Roomitem.js","Components/Rooms/Roomlist.js","Components/Sidebar.js","context/currentroom.context.js","Components/chat-window/Top/Editinroombtn.js","Components/chat-window/Top/Roominfobtn.js","Components/chat-window/Top/index.js","Components/chat-window/messages/ProfileInfoBtnModal.js","Components/Presencedot.js","Components/chat-window/messages/Itembtncontrol.js","Components/chat-window/messages/ImgBtnModal.js","Components/chat-window/messages/Messagesitem.js","Components/chat-window/messages/index.js","Components/chat-window/Bottom/AttachmentBtnModal.js","Components/chat-window/Bottom/AudioMsgBtn.js","Components/chat-window/Bottom/index.js","Pages/Home/Chat.js","Pages/Home/index.js","Pages/SignIn.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","storage","isOfflineForDatabase","state","last_changed","ServerValue","TIMESTAMP","isOnlineForDatabase","profilecontext","createContext","ProfileProvider","children","useState","profile","setProfile","isloading","setisloading","useEffect","useRef","userStatusRef","authUnsub","onAuthStateChanged","authObj","ref","uid","on","snap","val","data","name","createdAt","avatar","email","snapshot","onDisconnect","set","then","off","Provider","value","useProfile","useContext","PrivateRoute","routeProps","Container","Loader","center","vertical","size","content","speed","to","PublicRoute","Editinput","initialvalue","onsave","label","placeholder","emptymsg","wrapperclass","inputprops","input","setinput","iseditable","setiseditable","oninputchange","useCallback","onEditClick","A","onsaveclick","a","trimmed","trim","Alert","info","className","InputGroup","Input","onChange","disabled","Button","onClick","Icon","icon","ProvideBlock","currentUser","providerData","some","providerId","isConnected","setisConnected","updateisconnected","p","unlink","length","Error","error","message","link","provider","linkWithPopup","success","Tag","color","closable","onClose","block","GoogleAuthProvider","FacebookAuthProvider","nameshort","shorname","toUpperCase","split","transforarray","snapvalue","Object","keys","map","roomid","id","getuserupdate","userId","keyToupdate","db","updates","getMsg","orderByChild","equalTo","once","getrms","Promise","all","msgsnap","rmssnap","forEach","msnap","key","rsnap","Avatardisplay","rest","Avatar","circle","useModalstate","defaultvalue","isOpen","setisOpen","open","close","useMediaQuery","query","window","matchMedia","matches","setMatches","queryList","listener","evt","addListener","removeListener","acceptedfiletype","Avatarbtn","image","setimage","avataredited","getblob","canvas","resolve","reject","toBlob","blob","onuploadclicks","current","getImageScaledToCanvas","avatarref","child","put","cacheControl","uploadavatarref","getDownloadURL","downloadurl","update","src","htmlFor","type","accept","ev","currentfile","target","files","file","includes","isvalid","Modal","show","onHide","Header","Title","Body","width","height","border","borderRadius","rotate","Footer","appearance","Dashboard","signOut","newdata","msg","Drawer","Divider","DashboardToggle","formobile","SignOut","catch","err","full","placement","description","StringType","Schema","Types","model","Model","isRequired","Chatroombutton","formvalue","setformvalue","formref","onformchange","onSubmit","check","CreatedAt","admins","push","Form","fluid","formValue","FormGroup","ControlLabel","FormControl","componentClass","rows","RoomContext","RoomsProvider","rooms","setrooms","roomlisref","DATA","useRooms","Roomitem","room","lastmessage","datetime","Date","author","text","Roomlist","location","useLocation","Nav","reversed","style","activeKey","pathname","Item","Link","eventKey","Sidebar","heightref","setheight","scrollHeight","CurrentRoomContext","CurrentRoomProvider","DATa","useCurrentroom","selector","useContextSelector","Editinroombtn","chatId","useParams","v","ismobile","newname","newdesc","Roominfobtn","memo","Top","isAdmin","ButtonToolbar","ProfileInfoBtnModal","btnProps","shortName","memberSince","toLocaleDateString","getcolor","Presence","getText","Presencedot","presence","setpresence","userStatus","exists","usePresence","Whisper","trigger","speaker","Tooltip","Badge","backgroundColor","Conditionalbadge","condition","Itembtncontrol","isvisible","iconname","tooltip","badgecontent","props","visibility","delay","delayHide","delayShow","IconButton","ImgBtnModal","fileName","alt","href","rel","renderFileMessage","contentType","url","controls","Messagesitem","handleadmin","handleClick","handledelete","likes","Likecount","setValue","handleMouseOver","handleMouseOut","node","addEventListener","removeEventListener","useHover","selfref","hovered","isAdmins","canshow","ismsgAuthoradmin","isAuthor","cangrantadmin","isliked","Messages","messages","setmessgaes","ischatempty","canshowmsg","msgref","adminref","transaction","alert","msgid","mgsref","alertms","confirm","islast","msgId","fileRef","refFromURL","delete","AttachmentBtnModal","afterUpload","fileList","setFileList","isLoading","setIsLoading","onUpload","uploadPromises","f","now","blobFile","uploadSnapshots","shapePromises","metadata","Uploader","autoUpload","action","fileArr","filtered","filter","el","slice","multiple","listType","AudioMsgBtn","isRecording","setIsRecording","isUploading","setIsUploading","record","onStop","mimeType","assemblemsg","roomId","Bottom","oninput","onSendclick","msgdata","messageId","messgage","msgData","lastMsgId","pop","onKeyDown","keyCode","preventDefault","Chat","currentroom","find","snapval","Currentroomdata","Home","isdesktop","isExact","useRouteMatch","cansidebar","Grid","Row","Col","xs","md","exact","path","SignIn","signInWithProvider","signInWithPopup","additionalUserInfo","user","isNewUser","displayName","mdOffset","Panel","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bfa344e8.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/database'\r\nimport 'firebase/auth'\r\nimport 'firebase/storage'\r\n\r\n\r\nconst config={\r\n  apiKey: \"AIzaSyDebc6rnTMyO4zVYhBIUV11q_L-46hINgo\",\r\n  authDomain: \"chat-app-efe4f.firebaseapp.com\",\r\n  databaseURL: \"https://chat-app-efe4f-default-rtdb.firebaseio.com\",\r\n  projectId: \"chat-app-efe4f\",\r\n  storageBucket: \"chat-app-efe4f.appspot.com\",\r\n  messagingSenderId: \"101567791284\",\r\n  appId: \"1:101567791284:web:873bcb4452a2e5c56957e1\"\r\n};\r\n\r\nconst app=firebase.initializeApp(config);\r\nexport const auth=app.auth();\r\nexport const database=app.database();\r\nexport const storage=app.storage();","/* eslint-disable arrow-body-style */\r\nimport React,{  createContext, useState ,useContext, useEffect} from \"react\";\r\nimport firebase  from \"firebase/app\";\r\nimport { auth, database } from \"../misc/firebase\";\r\n\r\n\r\nexport const isOfflineForDatabase = {\r\n  state: 'offline',\r\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\nconst isOnlineForDatabase = {\r\n  state: 'online',\r\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\nconst profilecontext=createContext();\r\n\r\nexport const ProfileProvider = ({children})=>{\r\n  const [profile,setProfile]= useState(null)\r\n  const [isloading,setisloading]=useState(true)\r\n  \r\n\r\n  useEffect(() => {\r\n    let useRef;\r\n    let userStatusRef;\r\n\r\n    const authUnsub = auth.onAuthStateChanged(authObj => {\r\n      if (authObj) {\r\n        userStatusRef = database.ref(`/status/${authObj.uid}`);\r\n        useRef = database.ref(`/profiles/${authObj.uid}`);\r\n        useRef.on('value', snap => {\r\n          const { name, createdAt, avatar } = snap.val()\r\n\r\n          const data = {\r\n            name,\r\n            createdAt,\r\n            avatar,\r\n            uid: authObj.uid,\r\n            email: authObj.email,\r\n          };\r\n          setProfile(data);\r\n          setisloading(false);\r\n        });\r\n\r\n        database\r\n          .ref('.info/connected')\r\n          .on('value', snapshot => {\r\n            // If we're not currently connected, don't do anything.\r\n            if (!!snapshot.val() === false) {\r\n              return;\r\n            }\r\n\r\n            userStatusRef\r\n              .onDisconnect()\r\n              .set(isOfflineForDatabase)\r\n              .then(() => {\r\n                userStatusRef.set(isOnlineForDatabase);\r\n              });\r\n          });\r\n      } else {\r\n        if (useRef) {\r\n          useRef.off();\r\n        }\r\n\r\n        database.ref('.info/connected').off()\r\n\r\n        if (userStatusRef) {\r\n          userStatusRef.off();\r\n        }\r\n        setProfile(null);\r\n        setisloading(false);\r\n      }\r\n    });\r\n    return () => {\r\n      authUnsub();\r\n      \r\n      if (useRef) {\r\n        useRef.off();\r\n      }\r\n      if (userStatusRef) {\r\n        userStatusRef.off();\r\n      }\r\n      database.ref('.info/connected').off()\r\n    };\r\n  }, []);\r\n\r\n  \r\n  return <profilecontext.Provider value={{ profile, isloading}}>{children}</profilecontext.Provider>\r\n}\r\n  \r\nexport const useProfile=()=> useContext(profilecontext);","  \r\nimport React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nconst PrivateRoute = ({ children, ...routeProps }) => {\r\n  const { profile, isloading } = useProfile();\r\n\r\n  if (isloading && !profile) {\r\n    return (\r\n      <Container>\r\n        <Loader center vertical size=\"md\" content=\"Loading\" speed=\"fast\" />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (!profile && !isloading) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n\r\n  return <Route {...routeProps}>{children}</Route>;\r\n};\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nconst PublicRoute = ({ children, ...routeProps }) => {\r\n  const { profile, isloading } = useProfile();\r\n\r\n  if (isloading && !profile) {\r\n    return (\r\n      <Container>\r\n        <Loader center vertical size=\"md\" content=\"Loading\" speed=\"fast\" />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (profile && !isloading) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return <Route {...routeProps}>{children}</Route>;\r\n};\r\n\r\nexport default PublicRoute;","/* eslint-disable arrow-body-style */\r\nimport React, { useCallback, useState } from 'react'\r\nimport { Alert, Icon, Input, InputGroup } from 'rsuite'\r\n\r\nconst Editinput = ({initialvalue,onsave,label=null,placeholder='Write the value',\r\n                      emptymsg='Input is empty',wrapperclass=\"\",...inputprops}) => {\r\n      const [input,setinput]=useState(initialvalue) \r\n      const [iseditable,setiseditable]=useState(false)\r\n      \r\n      const oninputchange=useCallback((value)=>{\r\n        setinput(value)\r\n      },[])  \r\n\r\n      const onEditClick=useCallback(()=>{\r\n          setiseditable(A=>!A);\r\n          setinput(initialvalue)\r\n      },[initialvalue])\r\n\r\n      const onsaveclick=async ()=>{\r\n        const trimmed=input.trim()\r\n        if(trimmed==='')\r\n        {\r\n          Alert.info(emptymsg)\r\n        }\r\n        if(trimmed!==initialvalue){\r\n          await onsave(trimmed)\r\n        }\r\n        setiseditable(false)\r\n      }\r\n\r\n  return (\r\n    <div className={wrapperclass}>\r\n      {label}\r\n      <InputGroup>\r\n      <Input {...inputprops} placeholder={placeholder} onChange={oninputchange} \r\n      value={input} disabled={!iseditable}/>\r\n      <InputGroup.Button onClick={onEditClick}><Icon icon={iseditable?'close':'edit'} />\r\n      </InputGroup.Button>\r\n      {iseditable && <InputGroup.Button onClick={onsaveclick}><Icon icon='check' /></InputGroup.Button>}\r\n      </InputGroup>\r\n    </div>\r\n      \r\n  )\r\n}\r\n\r\nexport default Editinput\r\n","/* eslint-disable arrow-body-style */\r\nimport React, { useState } from 'react'\r\nimport { Alert, Button, Icon, Tag } from 'rsuite'\r\nimport firebase from 'firebase/app'\r\nimport { auth } from '../../misc/firebase'\r\n\r\nconst ProvideBlock = () => {\r\nconst [isConnected,setisConnected]=useState(\r\n  {'google.com'\r\n  :auth.currentUser.providerData.some((data)=>data.providerId=== \"google.com\"),\r\n  'facebook.com'\r\n  :auth.currentUser.providerData.some((data)=>data.providerId=== \"facebook.com\")\r\n  })\r\n  \r\n  const updateisconnected=(providerId,value)=>{\r\n   setisConnected((p)=>{\r\n     return {...p,[providerId]:value}\r\n   })\r\n  }\r\n\r\n\r\n  const unlink =async (providerId)=>{\r\n    try {\r\n      if(auth.currentUser.providerData.length === 1){\r\n        throw new Error(`You Cannot Disconnet from ${providerId}`)\r\n      }\r\n       await auth.currentUser.unlink(providerId)\r\n       updateisconnected(providerId,false)\r\n    }\r\n    catch(err){\r\n      Alert.error(err.message)\r\n    }\r\n  }\r\n\r\n     const unlinkgoogle=()=>{\r\n        unlink('google.com')\r\n     }  \r\n     const unlinkfacebook=()=>{\r\n       unlink('facebook.com')\r\n    }  \r\n    const link=async (provider)=>{\r\n      try {\r\n        await auth.currentUser.linkWithPopup(provider)\r\n        Alert.success(`connected with ${provider.providerId}`)\r\n        updateisconnected(provider.providerId,true)\r\n      } catch (err) {\r\n        Alert.Error(err.message)\r\n      }\r\n    } \r\n\r\n\r\n\r\n    const linkfacebook=()=>{\r\n     link(new firebase.auth.FacebookAuthProvider())\r\n    }\r\n    const linkgoogle=()=>{\r\n      link(new firebase.auth.GoogleAuthProvider())\r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {isConnected['google.com'] &&\r\n      <Tag color=\"green\" closable onClose={unlinkgoogle}>\r\n        <Icon icon='google' /> Connected\r\n      </Tag>\r\n       }\r\n       {isConnected['facebook.com'] &&\r\n      <Tag color=\"blue\" closable onClose={unlinkfacebook}>\r\n        <Icon icon='facebook' /> Connected\r\n      </Tag>}\r\n      <div className=\"mt-2\">\r\n        {!isConnected['google.com'] &&\r\n        <Button block color='green' onClick={linkgoogle}>\r\n          <Icon icon='google' /> Link to Google\r\n        </Button>}\r\n        {!isConnected['facebook.com'] &&\r\n        <Button block color='blue' onClick={linkfacebook}>\r\n          <Icon icon='facebook' />  Link to facebook\r\n        </Button>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProvideBlock\r\n","/* eslint-disable arrow-body-style */\r\nexport function nameshort(name){\r\n\r\n  const shorname=name.toUpperCase().split(' ')\r\n  if(shorname.length>1){\r\n    return shorname[0][0]+shorname[1][0]\r\n  }\r\n   return shorname[0][0]\r\n}\r\n\r\nexport function transferar(snapval){\r\n  return snapval ? Object.keys(snapval):[];\r\n}\r\n\r\nexport function transforarray(snapvalue) {\r\n   return snapvalue ? Object.keys(snapvalue).map(roomid=>{\r\n     return {...snapvalue[roomid],id:roomid}\r\n   }):[]\r\n}\r\n\r\nexport async function getuserupdate(userId,keyToupdate,value,db){\r\n     \r\n  const updates={}\r\n  updates[`/profiles/${userId}/${keyToupdate}`]=value;\r\n\r\n  const getMsg=db.ref('/messages').orderByChild('/author/uid')\r\n  .equalTo(userId).once('value')\r\n  const getrms=db.ref('/rooms').orderByChild('/lastmessage/author/uid')\r\n  .equalTo(userId).once('value')\r\n  const [msgsnap,rmssnap]=await Promise.all([getMsg,getrms])\r\n  msgsnap.forEach(msnap=>{\r\n    updates[`/messages/${msnap.key}/author/${keyToupdate}`]=value\r\n  })\r\n  rmssnap.forEach(rsnap=>{\r\n    updates[`/rooms/${rsnap.key}/lastmessage/author/${keyToupdate}`]=value\r\n  })\r\n  return updates;\r\n}\r\n ","/* eslint-disable arrow-body-style */\r\nimport React from 'react'\r\nimport { Avatar } from 'rsuite'\r\nimport { nameshort } from '../../misc/helper,'\r\n\r\nconst Avatardisplay = ({name,...rest}) => {\r\n  return (\r\n    <Avatar circle  {...rest}>\r\n      {nameshort(name)}\r\n    </Avatar>\r\n  )\r\n}\r\n\r\nexport default Avatardisplay\r\n","import { useCallback, useState ,useEffect, useRef} from \"react\";\r\nimport { database } from \"./firebase\";\r\n\r\n\r\nexport function useModalstate(defaultvalue=false){\r\n  const [isOpen,setisOpen]=useState(defaultvalue)\r\n\r\n  const open=useCallback(()=>setisOpen(true),[])\r\n  const close=useCallback(()=>setisOpen(false),[])\r\n\r\n  return {isOpen ,open ,close}\r\n}\r\n\r\nexport const useMediaQuery = query => {\r\n  const [matches, setMatches] = useState(\r\n    () => window.matchMedia(query).matches\r\n  );\r\n\r\n  useEffect(() => {\r\n    const queryList = window.matchMedia(query);\r\n    setMatches(queryList.matches);\r\n\r\n    const listener = evt => setMatches(evt.matches);\r\n\r\n    queryList.addListener(listener);\r\n    return () => queryList.removeListener(listener);\r\n  }, [query]);\r\n\r\n  return matches;\r\n};\r\n\r\nexport function usePresence(uid){\r\n  const [presence,setpresence]=useState(null)\r\n  useEffect(()=>{\r\n    const userStatus=database.ref(`/status/${uid}`)\r\n    userStatus.on('value',(snap)=>{\r\n      if(snap.exists){\r\n        const data=snap.val()\r\n        setpresence(data)\r\n      }\r\n    })\r\n    return()=>{\r\n       userStatus.off()\r\n    }\r\n  },[uid])\r\n  return presence\r\n}\r\n\r\nexport function useHover() {\r\n  const [value, setValue] = useState(false);\r\n  const ref = useRef(null);\r\n  const handleMouseOver = () => setValue(true);\r\n  const handleMouseOut = () => setValue(false);\r\n  useEffect(() => {\r\n      const node = ref.current;\r\n      if (node) {\r\n        node.addEventListener(\"mouseover\", handleMouseOver);\r\n        node.addEventListener(\"mouseout\", handleMouseOut);\r\n      };\r\n      return () => {\r\n        node.removeEventListener(\"mouseover\", handleMouseOver);\r\n        node.removeEventListener(\"mouseout\", handleMouseOut);\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [ref.current] // Recall only if ref changes\r\n );\r\n  return [ref, value];\r\n}","/* eslint-disable arrow-body-style */\r\nimport React, { useRef, useState } from 'react'\r\nimport { Modal,Button, Alert } from 'rsuite'\r\nimport AvatarEditor from 'react-avatar-editor'\r\nimport Avatardisplay from './Avatardisplay'\r\nimport { useModalstate } from '../../misc/Customhook'\r\nimport { database, storage } from '../../misc/firebase'\r\nimport { useProfile } from '../../context/profile.context'\r\nimport { getuserupdate } from '../../misc/helper,'\r\n\r\n\r\n\r\nconst inputfiles='.png,.jpeg,.jpg'\r\nconst acceptedfiletype=['image/png','image/jpeg','image/jpg']\r\n\r\n\r\nconst Avatarbtn = () => {\r\n  \r\n  const {isOpen,open,close}=useModalstate()\r\n  const isvalid=(file)=>acceptedfiletype.includes(file.type)\r\n  const [image,setimage]=useState(null)\r\n  const avataredited=useRef()\r\n  const {profile}=useProfile()\r\n  const [isloading,setisloading]=useState(false)\r\n\r\n\r\n  const getblob=(canvas)=>{\r\n    return new Promise((resolve,reject)=>{\r\n       canvas.toBlob((blob)=>{\r\n         if(blob){\r\n           resolve(blob)\r\n         }\r\n         else{\r\n           reject(new Error('file process error'))\r\n         }\r\n       })\r\n    })\r\n  }\r\n\r\n\r\n  const onUpload=(ev)=>{\r\n    const currentfile=ev.target.files\r\n  \r\n    if(currentfile.length===1){\r\n      const file=currentfile[0]\r\n      if(isvalid(file)){\r\n        setimage(file)\r\n        open()\r\n        ev.target.value=null\r\n        \r\n      }\r\n      else{\r\n        Alert.error(`wrong file type ${file.type}`,4000)\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  const onuploadclicks=async()=>{\r\n     const canvas=avataredited.current.getImageScaledToCanvas()  \r\n     setisloading(true)\r\n    try {\r\n      const blob=await getblob(canvas)\r\n      const avatarref=storage.ref(`/profiles/${profile.uid}`).child('avatar')\r\n      const uploadavatarref=await avatarref.put(blob,{\r\n        cacheControl:`public,max-age=${3600*24*3}`\r\n      })\r\n      const downloadurl=await uploadavatarref.ref.getDownloadURL()\r\n      const updates=await getuserupdate(profile.uid,'avatar',downloadurl,database)\r\n      database.ref().update(updates)\r\n      Alert.info('updated avatar')\r\n      setisloading(false)\r\n      close()\r\n    } catch (err) {\r\n      Alert.error(err.message)\r\n      setisloading(false)\r\n    }\r\n  }\r\n \r\n  return (\r\n\r\n    \r\n     <div className=\"mt-3 text-center\">\r\n       <Avatardisplay name={profile.name} src={profile.avatar} \r\n       className=\"width-200 height-200 img-fullsize font-huge\"/>\r\n      <div>\r\n        <label htmlFor=\"avatar-upload\" className=\"cursor-pointer d-block padded\">\r\n          Select New avatar\r\n          <input id=\"avatar-upload\"  type=\"file\" className=\"d-none\"\r\n           accept={inputfiles}  onChange={onUpload} />\r\n        </label>\r\n        \r\n        <Modal show={isOpen} onHide={close}>\r\n          <Modal.Header>\r\n            <Modal.Title>\r\n              Adjust and upload new avatar\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n         {image && (\r\n         <AvatarEditor\r\n         ref={avataredited}\r\n         image={image}\r\n         width={200}\r\n         height={200}\r\n         border={10}\r\n         borderRadius={100}\r\n         rotate={0}\r\n          />)}\r\n          </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n             <Button block appearance='ghost' onClick={onuploadclicks} disabled={isloading}>\r\n                upload the file\r\n             </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Avatarbtn;","/* eslint-disable arrow-body-style */\r\nimport React from 'react'\r\nimport { Alert, Button, Divider, Drawer } from 'rsuite'\r\nimport {useProfile} from '../../context/profile.context'\r\nimport { database } from '../../misc/firebase'\r\nimport Editinput from '../Editinput'\r\nimport ProvideBlock from './ProvideBlock'\r\nimport Avatarbtn from './Avatarbtn'\r\nimport { getuserupdate } from '../../misc/helper,'\r\n\r\nconst Dashboard = ({signOut}) => {\r\n  const {profile}=useProfile()\r\n\r\n  const onsave= async newdata=>{\r\n     \r\n      try{\r\n      \r\n        const updates=await getuserupdate(profile.uid,'name',newdata,database)\r\n        database.ref().update(updates)\r\n        Alert.success('Nickname updated',4000)\r\n      }\r\n      catch(err){\r\n          Alert.error(err.msg,4000)\r\n      }\r\n  }\r\n  return (\r\n    <>\r\n    <Drawer.Header>\r\n         <Drawer.Title>\r\n         Dashboard\r\n         </Drawer.Title>\r\n    </Drawer.Header>\r\n      \r\n      <Drawer.Body>\r\n        <h3> Hey,{profile.name} </h3>\r\n        <ProvideBlock />\r\n        <Divider />\r\n      <Editinput name=\"nickname\" \r\n                  initialvalue={profile.name}\r\n                  onsave={onsave}\r\n                  label={<div className=\"mb-2\">Nickname</div>}/>\r\n      <Avatarbtn />\r\n      </Drawer.Body>\r\n      <Drawer.Footer>\r\n        <Button block color=\"red\" onClick={signOut}>Sign Out</Button>\r\n      </Drawer.Footer>\r\n     </> \r\n    \r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","/* eslint-disable arrow-body-style */\r\nimport React, { useCallback } from 'react'\r\nimport { Alert, Button, Drawer, Icon } from 'rsuite'\r\nimport Dashboard from '.'\r\nimport { isOfflineForDatabase } from '../../context/profile.context'\r\nimport {useModalstate,useMediaQuery} from '../../misc/Customhook'\r\nimport { auth, database } from '../../misc/firebase'\r\n\r\nconst DashboardToggle = () => {\r\n  const {isOpen,close,open}=useModalstate()\r\n  const formobile=useMediaQuery('(max-width:992px)')\r\n  \r\n  const SignOut=useCallback(()=>{\r\n    database.ref(`/status/${auth.currentUser.uid}`)\r\n              .set(isOfflineForDatabase)\r\n              .then(() => {\r\n                auth.signOut()\r\n                Alert.info('SignedOut',4000)\r\n                close();\r\n              }).catch(err=>{\r\n                 Alert.error(err.message)\r\n              })\r\n\r\n\r\n\r\n  },[close])\r\n\r\n  return (\r\n    <>\r\n    <Button block color=\"red\" onClick={open}>\r\n      <Icon icon='dashboard' /> Dashboard\r\n    </Button>\r\n    <Drawer full={formobile} show={isOpen} onHide={close} placement=\"left\">\r\n      <Dashboard signOut={SignOut} /> \r\n    </Drawer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DashboardToggle\r\n","/* eslint-disable arrow-body-style */\r\nimport React, { useCallback, useRef, useState } from 'react'\r\nimport { Button,Icon,Modal,Form, FormGroup,ControlLabel, FormControl, Schema, Alert} from 'rsuite'\r\nimport firebase from 'firebase/app'\r\nimport { useModalstate } from '../misc/Customhook'\r\nimport { auth, database } from '../misc/firebase'\r\n\r\nconst initialvalue={\r\n  name:'',\r\n  description:''\r\n\r\n}\r\n\r\nconst { StringType } =Schema.Types\r\nconst model=Schema.Model({\r\n  name:StringType().isRequired('Chat name is required'),\r\n  description:StringType().isRequired('Description is required')\r\n})\r\n\r\nconst Chatroombutton = () => {\r\n   const {isOpen,open,close}=useModalstate()\r\n   const [formvalue,setformvalue]=useState(initialvalue)\r\n   const [isloading,setisloading]=useState(false)\r\n   const formref=useRef()\r\n\r\n  const onformchange=useCallback((value)=>{\r\n        setformvalue(value)\r\n  },[])\r\n\r\n  const onSubmit=async() => {\r\n     if(!formref.current.check())\r\n     {\r\n       return ;\r\n     }\r\n     setisloading(true)\r\n     const newdata={\r\n       ...formvalue,\r\n       CreatedAt:firebase.database.ServerValue.TIMESTAMP,\r\n       admins:{\r\n         [auth.currentUser.uid]:true,\r\n       }\r\n     }\r\n\r\n    try {\r\n      await database.ref('rooms').push(newdata)\r\n      Alert.info(`${formvalue.name} Created`)\r\n      setformvalue(initialvalue)\r\n      close()\r\n      setisloading(false)\r\n\r\n    } catch (err) {\r\n      Alert.error(err.message,4000)\r\n    }\r\n  }\r\n\r\n  return (\r\n   <div className='mt-1'>\r\n   <Button block color='blue' onClick={open}>\r\n     <Icon icon='telegram'  />  Create new chat room\r\n   </Button>\r\n   <Modal show={isOpen} onHide={close} >\r\n      <Modal.Header>\r\n        <Modal.Title>\r\n             New Chat room\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n         <Form fluid onChange={onformchange} formValue={formvalue} model={model} \r\n         ref={formref}>\r\n           <FormGroup>\r\n             <ControlLabel>Room Name</ControlLabel>\r\n             <FormControl name=\"name\" placeholder='Enter chat room name...'/>\r\n           </FormGroup>\r\n           <FormGroup>\r\n              <ControlLabel>Desciption</ControlLabel>\r\n              <FormControl\r\n                componentClass=\"textarea\"\r\n                rows={5}\r\n                name=\"description\"\r\n                placeholder=\"Enter room Description..... \"\r\n              />\r\n            </FormGroup>\r\n         </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button block appearance='primary' onClick={onSubmit} disabled={isloading}>\r\n           Create new chat room\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n    </div>\r\n \r\n  )\r\n}\r\n\r\nexport default Chatroombutton\r\n\r\n","/* eslint-disable arrow-body-style */\r\nimport React,{ createContext, useContext, useEffect, useState } from \"react\";\r\nimport { database } from \"../misc/firebase\";\r\nimport { transforarray } from \"../misc/helper,\";\r\n\r\n\r\n\r\nconst RoomContext=createContext()\r\n\r\nexport const RoomsProvider=({children})=>{\r\n  const [rooms,setrooms]=useState(null)\r\n  useEffect(()=>{\r\n      const roomlisref=database.ref('rooms')\r\n      roomlisref.on('value', (snap)=>{\r\n        const DATA=transforarray(snap.val())\r\n        setrooms(DATA)\r\n      })\r\n      return () =>{\r\n        roomlisref.off()\r\n      }\r\n  },[])\r\n\r\nreturn <RoomContext.Provider value={rooms}>{children}</RoomContext.Provider>\r\n}\r\n\r\nexport const useRooms=()=>useContext(RoomContext)","/* eslint-disable arrow-body-style */\r\nimport React from 'react'\r\nimport TimeAgo from 'timeago-react';\r\nimport Avatardisplay from '../DashBoard/Avatardisplay'\r\n\r\nconst Roomitem = ({room}) => {\r\n  const {CreatedAt,name,lastmessage}=room\r\n  return (\r\n    <div>\r\n    <div className=\"d-flex justify-content-between align-items-center\">\r\n       <h3 className=\"text-disappear\">{name}</h3>\r\n       <TimeAgo\r\n  datetime={lastmessage? new Date(lastmessage.createdAt):new Date(CreatedAt)} className=\"font-normal text-black-45\" />\r\n    </div>\r\n    <div className=\"d-flex align-items-center text-black-70\">\r\n      {lastmessage?(\r\n   < >\r\n      <div className=\"d-flex align-items-center\">\r\n       <Avatardisplay src={lastmessage.author.avatar} name={lastmessage.author.name} size=\"sm\" />\r\n       </div>\r\n       <div className=\"text-disappear ml-2\">\r\n         <div className=\"italic\">{lastmessage.author.name}</div>\r\n         <span>{lastmessage.text}</span>\r\n       </div>\r\n      </>):\r\n      (<span>No messages yet ...</span>)}\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Roomitem\r\n\r\n","\r\nimport React from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport {Nav,Loader} from 'rsuite'\r\nimport { useRooms } from '../../context/room.context'\r\nimport Roomitem from './Roomitem'\r\n\r\n\r\n\r\nconst Roomlist = ({height}) => {\r\n  const rooms=useRooms()\r\n  const location=useLocation()\r\n\r\n\r\n  return (\r\n    <Nav appearance='subtle' vertical reversed \r\n    className=\"overflow-y-scroll custom-scroll\" style={{\r\n      height: `calc(100% - ${height}px)`\r\n    }} activeKey={location.pathname}>\r\n      {!rooms && (<Loader center vertical content='loading' speed='slow' size='md'  />)}\r\n       \r\n     {rooms && rooms.length>0 && rooms.map(room=>(\r\n        <Nav.Item componentClass={Link} to={`/chat/${room.id}`} key={room.id} \r\n        eventKey={`/chat/${room.id}`}>\r\n          <Roomitem room={room}/>\r\n        </Nav.Item>))}\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default Roomlist\r\n","/* eslint-disable arrow-body-style */\r\nimport React, { useEffect, useState,useRef } from 'react'\r\nimport {Divider} from 'rsuite'\r\nimport DashboardToggle from './DashBoard/DashboardToggle'\r\nimport Chatroombutton from './Chatroombutton'\r\nimport Roomlist  from './Rooms/Roomlist'\r\n\r\nconst Sidebar = () => {\r\n  const heightref=useRef()\r\n  const [height,setheight]=useState(0)\r\n  useEffect(()=>{\r\n    if(heightref.current){\r\n      setheight(heightref.current.scrollHeight)\r\n    }\r\n  },[heightref])\r\n\r\n  return (\r\n    <div className=\"h-100 pt-2\">\r\n      <div ref={heightref}>\r\n      <DashboardToggle />\r\n      <Chatroombutton />\r\n      <Divider>Join Conversation</Divider>\r\n    </div>\r\n      <Roomlist height={height}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","/* eslint-disable arrow-body-style */\r\nimport React from \"react\";\r\nimport { createContext,  useContextSelector } from \"use-context-selector\";\r\n\r\n\r\n\r\nconst CurrentRoomContext=createContext();\r\n\r\nexport const CurrentRoomProvider=({children,DATa})=>{\r\n\r\n  return (<CurrentRoomContext.Provider value={DATa}>{children}</CurrentRoomContext.Provider>)\r\n\r\n}\r\n\r\nexport const useCurrentroom=(selector)=>useContextSelector(CurrentRoomContext,selector)","import React from 'react'\r\nimport { useParams } from 'react-router'\r\nimport {Alert, Button,Drawer} from 'rsuite'\r\nimport { useCurrentroom } from '../../../context/currentroom.context'\r\nimport { useMediaQuery, useModalstate } from '../../../misc/Customhook'\r\nimport { database } from '../../../misc/firebase'\r\nimport Editinput from '../../Editinput'\r\n\r\nconst Editinroombtn = () => {\r\n  const {open,close,isOpen}=useModalstate()\r\n  const {chatId}=useParams()\r\n  const name=useCurrentroom(v=>v.name)\r\n  const description=useCurrentroom(v=>v.description)\r\n  const ismobile=useMediaQuery('(max-width:992px)')\r\n\r\n  const update=(key,value)=>{\r\n      database.ref(`/rooms/${chatId}`).child(key).set(value).then(()=>{\r\n        Alert.success('updated succesfully',4000)\r\n      }).catch(err=>{\r\n        Alert.error(err.message,4000)\r\n      })\r\n  }\r\n\r\n  const onnamesave=(newname)=>{\r\n    update('name',newname)\r\n  }\r\n  const ondescsave=(newdesc)=>{\r\n    update('description',newdesc)\r\n  }\r\n  return (\r\n    <div>\r\n      <Button className=\"br-circle\" size='sm' color='red' onClick={open}>\r\n       A\r\n      </Button>\r\n      <Drawer full={ismobile} show={isOpen} onHide={close} placement='right'>\r\n       <Drawer.Header>\r\n         <Drawer.Title>Edit Room</Drawer.Title>\r\n       </Drawer.Header>\r\n       <Drawer.Body>\r\n         <Editinput initialvalue={name} onsave={onnamesave} \r\n         label={<h6 className=\"mb-2\">Name</h6>} emptymsg=\"name is empty\"/>\r\n         <Editinput componentClass=\"textarea\" rows={5} initialvalue={description} onsave={ondescsave} \r\n          emptymsg=\"Description is empty\" wrapperclass=\"mt-3\"/>\r\n       </Drawer.Body>\r\n       <Drawer.Footer>\r\n         <Button block onClick={close} color='blue' placement='right'>close</Button>\r\n       </Drawer.Footer>\r\n      </Drawer>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Editinroombtn\r\n","\r\nimport React,{memo} from 'react'\r\nimport {Button,Modal} from 'rsuite'\r\nimport { useCurrentroom } from '../../../context/currentroom.context'\r\nimport { useModalstate } from '../../../misc/Customhook'\r\n\r\nconst Roominfobtn = () => {\r\n  const description=useCurrentroom(v=>v.description)\r\n  const name=useCurrentroom(v=>v.name)\r\n  const {isOpen,open,close}=useModalstate()\r\n  return (\r\n    <>\r\n     <Button appearance='link' className=\"px-0\" onClick={open}>\r\n       Room information\r\n     </Button>\r\n     <Modal show={isOpen} onHide={close}>\r\n       <Modal.Header>\r\n         <Modal.Title>About {name} </Modal.Title>\r\n       </Modal.Header>\r\n       <Modal.Body>\r\n        <h6 className=\"mb-1\">Description</h6>\r\n        <p>{description}</p>\r\n       </Modal.Body>\r\n       <Modal.Footer>\r\n         <Button block onClick={close} color='blue'>\r\n           Close\r\n         </Button>\r\n       </Modal.Footer>\r\n     </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default memo(Roominfobtn)\r\n","import React,{memo} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {Icon,ButtonToolbar} from 'rsuite'\r\nimport { useCurrentroom } from '../../../context/currentroom.context'\r\nimport { useMediaQuery } from '../../../misc/Customhook'\r\nimport Editinroombtn from './Editinroombtn'\r\nimport Roominfobtn from './Roominfobtn'\r\n\r\nconst Top = () => {\r\n  const name=useCurrentroom(v=>v.name)\r\n  const isAdmin=useCurrentroom(v=>v.isAdmin)\r\n  const ismobile=useMediaQuery('(max-width:992px)')\r\n\r\n  return (\r\n   <div>\r\n    <div className=\"d-flex justify-content-between align-items-center\">\r\n      <h4 className='text-disappear d-flex align-item-center'>\r\n          <Icon componentClass={Link} to=\"/\" icon='arrow-circle-left' size='2x'\r\n          className={ismobile?'d-inline-block p-0 mr-2 text-blue link-unstyled':'d-none'}/>\r\n          <span className=\"text-disappear\">{name}</span>\r\n      </h4>\r\n      {isAdmin && <ButtonToolbar className=\"ws-nowrap\">\r\n        <Editinroombtn />\r\n      </ButtonToolbar>}\r\n    </div>\r\n    <div className=\"d-flex justify-content-between align-items-center\">\r\n      <span>todo</span>\r\n      <Roominfobtn />\r\n    </div>\r\n   </div>\r\n  )\r\n}\r\n\r\nexport default memo(Top)\r\n","import React from 'react'\r\nimport {Button,Modal} from 'rsuite'\r\nimport  { useModalstate } from '../../../misc/Customhook'\r\nimport Avatardisplay from '../../DashBoard/Avatardisplay';\r\n\r\n\r\n\r\nconst ProfileInfoBtnModal = ({ profile,children, ...btnProps }) => {\r\n  const { isOpen, close, open } = useModalstate();\r\n  const { name, avatar, createdAt } = profile;\r\n  const shortName = profile.name.split(' ')[0];\r\n  const memberSince = new Date(createdAt).toLocaleDateString();\r\n\r\n\r\n  return (\r\n    <>\r\n      <Button {...btnProps} onClick={open}>\r\n        {shortName}\r\n      </Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>{shortName} profile</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"text-center\">\r\n          <Avatardisplay\r\n            src={avatar}\r\n            name={name}\r\n            className=\"width-200 height-200 img-fullsize font-huge\"\r\n          />\r\n          <h4 className=\"mt-2\">{name}</h4>\r\n          <p>Member since {memberSince}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {children}\r\n          <Button block onClick={close}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileInfoBtnModal","import React from 'react'\r\nimport { Whisper,Tooltip,Badge} from 'rsuite'\r\nimport { usePresence } from '../misc/Customhook'\r\n\r\nconst getcolor=(Presence)=>{\r\n  if(!Presence){\r\n    return 'gray'\r\n  }\r\n  switch(Presence.state){\r\n    case 'online':return 'green';\r\n    case 'offline':return 'red';\r\n    default: return 'gray';\r\n  }\r\n}\r\nconst getText=(Presence)=>{\r\nif(!Presence){\r\n  return 'unknown-state'\r\n}\r\nreturn Presence.state==='online'?'online':`Last online ${new Date(Presence.last_changed).toLocaleDateString()}`\r\n}\r\n\r\nconst Presencedot = ({uid}) => {\r\n  const Presence=usePresence(uid)\r\n  return (\r\n    <Whisper placement=\"top\" trigger=\"hover\" speaker={ <Tooltip>\r\n      {getText(Presence)}\r\n    </Tooltip>}>\r\n      <Badge className=\"cursor-pointor\" style={{backgroundColor:getcolor(Presence)}}/>\r\n  </Whisper>\r\n  )\r\n}\r\n\r\nexport default Presencedot\r\n","/* eslint-disable arrow-body-style */\r\nimport React  from 'react'\r\nimport {Badge,Whisper,IconButton,Icon} from 'rsuite'\r\n\r\nconst Conditionalbadge=({condition,children})=> \r\n{return condition ? <Badge content={condition}>{children}</Badge>: children}\r\n\r\nconst Itembtncontrol = ({isvisible,iconname,tooltip,badgecontent,onClick,...props}) => {\r\n \r\n \r\n  return(\r\n    <div className=\"ml-2\" style={{visibility:isvisible? 'visible':'hidden'}}>\r\n      <Conditionalbadge condition={badgecontent}>\r\n      <Whisper placement=\"top\" delay={0} delayHide={0} delayShow={0} \r\n      trigger='hover' speaker={<tooltip>{tooltip}</tooltip>}>\r\n        <IconButton {...props} onClick={onClick} circle size='xs' icon={<Icon icon={iconname}/>} />\r\n      </Whisper>\r\n      </Conditionalbadge>\r\n    </div>\r\n  )}\r\n\r\nexport default Itembtncontrol\r\n","import React from 'react';\r\nimport { Modal } from 'rsuite';\r\nimport { useModalstate } from '../../../misc/Customhook';\r\n\r\nconst ImgBtnModal = ({ src, fileName }) => {\r\n  const { isOpen, open, close } = useModalstate();\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"image\"\r\n        src={src}\r\n        alt=\"file\"\r\n        onClick={open}\r\n        className=\"mw-100 mh-100 w-auto\"\r\n      />\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>{fileName}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div>\r\n            <img src={src} height=\"100%\" width=\"100%\" alt=\"file\" />\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <a href={src} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            View original\r\n          </a>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImgBtnModal;","import React, { memo } from 'react'\r\nimport TimeAgo from 'timeago-react';\r\nimport {Button} from 'rsuite'\r\nimport Avatardisplay from '../../DashBoard/Avatardisplay'\r\nimport ProfileInfoBtnModal from './ProfileInfoBtnModal';\r\nimport Presencedot from '../../Presencedot';\r\nimport { useCurrentroom } from '../../../context/currentroom.context';\r\nimport { auth } from '../../../misc/firebase';\r\nimport { useHover, useMediaQuery } from '../../../misc/Customhook';\r\nimport Itembtncontrol from './Itembtncontrol';\r\nimport ImgBtnModal from './ImgBtnModal';\r\n\r\nconst renderFileMessage = file => {\r\n  if (file.contentType.includes('image')) {\r\n    return (\r\n      <div className=\"height-220\">\r\n        <ImgBtnModal src={file.url} fileName={file.name} />\r\n      </div>\r\n    );\r\n  }\r\n  if (file.contentType.includes('audio')) {\r\n    return (\r\n      // eslint-disable-next-line jsx-a11y/media-has-caption\r\n      <audio controls>\r\n        <source src={file.url} type=\"audio/mp3\" />\r\n        Your browser does not support the audio element.\r\n      </audio>    \r\n      );\r\n  }\r\n\r\n  return <a href={file.url}>Download {file.name}</a>;\r\n};\r\n\r\nconst Messagesitem = ({message,handleadmin,handleClick,handledelete}) => {\r\n  const {author,createdAt,text,likes,Likecount,file}=message\r\n  const [selfref,hovered]=useHover()\r\n  const ismobile=useMediaQuery('(max-width:992px)')\r\n  const isAdmins=useCurrentroom(v=>v.isAdmin)\r\n  const admins=useCurrentroom(v=>v.admins)\r\n  const canshow=hovered || ismobile\r\n  const ismsgAuthoradmin=admins.includes(author.uid)\r\n  const isAuthor=auth.currentUser.uid===author.uid\r\n  const cangrantadmin=isAdmins && !isAuthor\r\n  const isliked=likes && Object.keys(likes).includes(auth.currentUser.uid)\r\n\r\n\r\n  return (\r\n    <li className={`padded mb-1 cursor-pointer ${hovered?'bg-black-02':''}`} ref={selfref}>\r\n     <div className=\"d-flex align-items-center font-bolder mb-1\">\r\n       <Presencedot uid={author.uid}/>\r\n       <Avatardisplay src={author.avatar} name={author.name} className=\"ml-1\" size=\"xs\"/>\r\n       <ProfileInfoBtnModal  profile={author} appearance=\"link\" className=\"p-0 ml-1 text-black\"  >\r\n         {cangrantadmin && <Button block onClick={()=>handleadmin(author.uid)} color='blue'>\r\n             {ismsgAuthoradmin?'Remove Admin':'Add admin'}\r\n           </Button>}\r\n       </ProfileInfoBtnModal>\r\n       <TimeAgo  datetime={createdAt} className=\"font-normal ml-1 text-black-45\" />\r\n       <Itembtncontrol {...(isliked?{color:'red'}:{})} isvisible={canshow} iconname='heart'\r\n       tooltip=\"Like the message\" badgecontent={Likecount} onClick={()=>handleClick(message.id)}/>\r\n       {isAuthor &&  <Itembtncontrol  isvisible={canshow} iconname='close'\r\n       tooltip=\"Delete the message\"  onClick={()=>handledelete(message.id,file)} />}\r\n     </div>\r\n     <div className=\"word-break-all\">{text}</div>\r\n     {file && renderFileMessage(file)}\r\n   </li>\r\n  )\r\n}\r\n\r\nexport default memo(Messagesitem)\r\n","/* eslint-disable arrow-body-style */\r\nimport React, { useCallback, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { Alert } from 'rsuite'\r\nimport {auth, database, storage} from '../../../misc/firebase'\r\nimport { transforarray } from '../../../misc/helper,'\r\nimport Messageitem from './Messagesitem'\r\n\r\nconst Messages = () => {\r\n  const [messages,setmessgaes]=useState(null)\r\n  const {chatId}=useParams()\r\n  const ischatempty=messages && messages.length===0;\r\n  const canshowmsg=messages && messages.length>0;\r\n  useEffect(()=>{\r\n    const msgref=database.ref('/messages')\r\n    msgref.orderByChild('roomId').equalTo(chatId).on('value',(snap)=>{\r\n      const data=transforarray(snap.val())\r\n      setmessgaes(data)\r\n    })\r\n    return ()=>{\r\n      msgref.off()\r\n    }\r\n  },[chatId])\r\n  const handleadmin=useCallback(async(uid)=>{\r\n    const adminref=database.ref(`/rooms/${chatId}/admins`)\r\n    let alert;\r\n    await adminref.transaction(admins=>{\r\n      if(admins){\r\n        if(admins[uid]){\r\n            admins[uid]=null\r\n            alert='Admin permission removed'\r\n        }\r\n        else{\r\n          admins[uid]=true\r\n          alert='Admin permission grandted'\r\n        }\r\n      }\r\n      return admins;\r\n    })\r\n    Alert.info(alert,4000)\r\n  },[chatId])\r\n  const handleClick=useCallback(async(msgid)=>{\r\n    let alertms;\r\n      const {uid}=auth.currentUser;\r\n      const mgsref=database.ref(`/messages/${msgid}`)\r\n      await mgsref.transaction(msg=>{\r\n        if(msg){\r\n          if(msg.likes && msg.likes[uid]){\r\n            msg.Likecount-=1\r\n            msg.likes[uid]=null\r\n            alertms='like removed'\r\n          }\r\n          else{\r\n            msg.Likecount+=1\r\n            if(!msg.likes){\r\n              msg.likes={}\r\n            }\r\n            msg.likes[uid]=true;\r\n            alertms='liked'\r\n          }\r\n        }\r\n        return msg;\r\n      })\r\n      Alert.info(alertms,4000)\r\n  },[])\r\n   const handledelete=useCallback(async(msgid,file)=>{\r\n    // eslint-disable-next-line no-alert\r\n    if(!window.confirm('Confirm to delete message')){\r\n      return ;\r\n    }\r\n    const islast=messages[messages.length-1].id===msgid\r\n    const updates={}\r\n    updates[`/messages/${msgid}`]=null\r\n    if(islast && messages.length>1){\r\n      updates[`/rooms/${chatId}/lastmessage`]={\r\n        ...messages[messages.length-2],\r\n        msgId:messages[messages.length-2].id\r\n      }\r\n     \r\n    }\r\n    if(islast && messages.length===1){\r\n      updates[`/rooms/${chatId}/lastmessage`]=null\r\n    }\r\n    try {\r\n      database.ref().update(updates)\r\n      Alert.info('Message deleted')\r\n    } catch (err) {\r\n      Alert.error(err.msg,4000)\r\n    }\r\n    if (file) {\r\n      try {\r\n        const fileRef = storage.refFromURL(file.url);\r\n        await fileRef.delete();\r\n      } catch (err) {\r\n        Alert.error(err.message);\r\n      }\r\n    }\r\n   },[chatId, messages])\r\n\r\n\r\n  return (\r\n    <ul className=\"msg-list custom-scroll\">\r\n      {ischatempty && <li>Chat is empty</li>}\r\n      {canshowmsg && messages.map(msg=> <Messageitem key={msg.id} message={msg} handleadmin={handleadmin} handleClick={handleClick} handledelete={handledelete}/>)}\r\n     \r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Messages\r\n\r\n","/* eslint-disable arrow-body-style */\r\nimport React, { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { InputGroup, Icon, Modal, Button, Uploader, Alert } from 'rsuite';\r\nimport { useModalstate } from '../../../misc/Customhook';\r\nimport { storage } from '../../../misc/firebase';\r\n\r\nconst MAX_FILE_SIZE = 1000 * 1024 * 5;\r\n\r\nconst AttachmentBtnModal = ({ afterUpload }) => {\r\n  const { chatId } = useParams();\r\n  const { isOpen, close, open } = useModalstate();\r\n\r\n  const [fileList, setFileList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const onChange = fileArr => {\r\n    const filtered = fileArr\r\n      .filter(el => el.blobFile.size <= MAX_FILE_SIZE)\r\n      .slice(0, 5);\r\n\r\n    setFileList(filtered);\r\n  };\r\n\r\n  const onUpload = async () => {\r\n    try {\r\n      const uploadPromises = fileList.map(f => {\r\n        return storage.ref(`/chat/${chatId}`).child(Date.now() + f.name) .put(f.blobFile, {\r\n            cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n          });\r\n      });\r\n\r\n      const uploadSnapshots = await Promise.all(uploadPromises);\r\n\r\n      const shapePromises = uploadSnapshots.map(async snap => {\r\n        return {\r\n          contentType: snap.metadata.contentType,\r\n          name: snap.metadata.name,\r\n          url: await snap.ref.getDownloadURL(),\r\n        };\r\n      });\r\n\r\n      const files = await Promise.all(shapePromises);\r\n\r\n      await afterUpload(files);\r\n\r\n      setIsLoading(false);\r\n      close();\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <InputGroup.Button onClick={open}>\r\n        <Icon icon=\"attachment\" />\r\n      </InputGroup.Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>Upload files</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Uploader\r\n            autoUpload={false}\r\n            action=\"\"\r\n            fileList={fileList}\r\n            onChange={onChange}\r\n            multiple\r\n            listType=\"picture-text\"\r\n            className=\"w-100\"\r\n            disabled={isLoading}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button block disabled={isLoading} onClick={onUpload}>\r\n            Send to chat\r\n          </Button>\r\n          <div className=\"text-right mt-2\">\r\n            <small>* only files less than 5 mb are allowed</small>\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AttachmentBtnModal;","import React, { useState, useCallback } from 'react';\r\nimport { InputGroup, Icon, Alert } from 'rsuite';\r\nimport { ReactMic } from 'react-mic';\r\nimport { useParams } from 'react-router';\r\nimport { storage } from '../../../misc/firebase';\r\n\r\nconst AudioMsgBtn = ({ afterUpload }) => {\r\n  const { chatId } = useParams();\r\n\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n\r\n  const onClick = useCallback(() => {\r\n    setIsRecording(p => !p);\r\n  }, []);\r\n\r\n  const onUpload = useCallback(\r\n    async data => {\r\n      setIsUploading(true);\r\n      try {\r\n        const snap = await storage\r\n          .ref(`/chat/${chatId}`)\r\n          .child(`audio_${Date.now()}.mp3`)\r\n          .put(data.blob, {\r\n            cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n          });\r\n\r\n        const file = {\r\n          contentType: snap.metadata.contentType,\r\n          name: snap.metadata.name,\r\n          url: await snap.ref.getDownloadURL(),\r\n        };\r\n        afterUpload([file])\r\n        setIsUploading(false);\r\n        \r\n      } catch (error) {\r\n        setIsUploading(false);\r\n        Alert.error(error.message);\r\n      }\r\n    },\r\n    [afterUpload, chatId]\r\n  );\r\n\r\n  return (\r\n    <InputGroup.Button\r\n      onClick={onClick}\r\n      disabled={isUploading}\r\n      className={isRecording ? 'animate-blink' : ''}\r\n    >\r\n      <Icon icon=\"microphone\" />\r\n      <ReactMic\r\n        record={isRecording}\r\n        className=\"d-none\"\r\n        onStop={onUpload}\r\n        mimeType=\"audio/mp3\"\r\n      />\r\n    </InputGroup.Button>\r\n  );\r\n};\r\n\r\nexport default AudioMsgBtn;","/* eslint-disable arrow-body-style */\r\nimport React, { useCallback, useState } from 'react'\r\nimport {InputGroup,Input,Icon, Alert} from 'rsuite'\r\nimport firebase from 'firebase/app'\r\nimport { useParams } from 'react-router'\r\nimport { useProfile } from '../../../context/profile.context'\r\nimport { database } from '../../../misc/firebase'\r\nimport AttachmentBtnModal from './AttachmentBtnModal'\r\nimport AudioMsgBtn from './AudioMsgBtn'\r\n\r\nfunction assemblemsg(profile,chatId) {\r\n  return {\r\n    roomId:chatId,\r\n    author:{\r\n      name:profile.name,\r\n      uid:profile.uid,\r\n      createdAt:profile.createdAt,\r\n      ...(profile.avatar? {avatar:profile.avatar}:{})\r\n\r\n    },\r\n    createdAt:firebase.database.ServerValue.TIMESTAMP,\r\n    Likecount:0\r\n  }\r\n}\r\n\r\nconst Bottom = () => {\r\n  const [input,setinput]=useState('')\r\n  const {profile}=useProfile()\r\n  const {chatId}=useParams()\r\n  const [isloading,setisloading]=useState(false)\r\n\r\n  const oninput=useCallback((value)=>{\r\n     setinput(value)\r\n  },[])\r\n\r\n  const onSendclick=async()=>{\r\n\r\n    if(input.trim()==='')\r\n    {\r\n      return ;\r\n    }\r\n    const msgdata=assemblemsg(profile,chatId)\r\n    msgdata.text=input;\r\n    const updates={};\r\n\r\n    const messageId=database.ref('messages').push().key;\r\n\r\n    updates[`/messages/${messageId}`]=msgdata\r\n    updates[`/rooms/${chatId}/lastmessage`]={\r\n      ...msgdata,msgId:messageId\r\n    }\r\n    setisloading(true)\r\n    try {\r\n      await database.ref().update(updates);\r\n      setinput('')\r\n      setisloading(false)\r\n      \r\n    } catch (err) {\r\n      Alert.error(err.messgage)\r\n      setisloading(false)\r\n    }\r\n\r\n  }\r\n\r\n  const onKeyDown=(ev)=>{\r\n    if(ev.keyCode === 13){\r\n      ev.preventDefault()\r\n      onSendclick()\r\n    }\r\n  }\r\n  const afterUpload= useCallback(\r\n    async files => {\r\n      setisloading(true);\r\n\r\n      const updates = {};\r\n\r\n      files.forEach(file => {\r\n        const msgData = assemblemsg(profile, chatId);\r\n        msgData.file = file;\r\n\r\n        const messageId = database.ref('messages').push().key;\r\n\r\n        updates[`/messages/${messageId}`] = msgData;\r\n      });\r\n\r\n      const lastMsgId = Object.keys(updates).pop();\r\n\r\n      updates[`/rooms/${chatId}/lastMessage`] = {\r\n        ...updates[lastMsgId],\r\n        msgId: lastMsgId,\r\n      };\r\n\r\n      try {\r\n        await database.ref().update(updates);\r\n        setisloading(false);\r\n      } catch (err) {\r\n        setisloading(false);\r\n        Alert.error(err.message);\r\n      }\r\n    },\r\n    [chatId, profile]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <InputGroup>\r\n      <AttachmentBtnModal afterUpload={afterUpload}/>\r\n      <AudioMsgBtn afterUpload={afterUpload} />\r\n       <Input placeholder=\"Write your messages...\" value={input} onChange={oninput} onKeyDown={onKeyDown} />\r\n       <InputGroup.Button appearance='primary' color='blue' \r\n       onClick={onSendclick} disabled={isloading} >\r\n         <Icon icon='send'/>\r\n       </InputGroup.Button>\r\n     </InputGroup>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Bottom\r\n","/* eslint-disable arrow-body-style */\r\nimport React from 'react'\r\nimport { useParams } from 'react-router'\r\nimport {Loader} from 'rsuite'\r\nimport ChatTop from '../../Components/chat-window/Top'\r\nimport Messages from '../../Components/chat-window/messages'\r\nimport ChatBottom from '../../Components/chat-window/Bottom'\r\nimport { useRooms } from '../../context/room.context'\r\nimport { CurrentRoomProvider } from '../../context/currentroom.context'\r\nimport { transferar } from '../../misc/helper,'\r\nimport { auth } from '../../misc/firebase'\r\n\r\nconst Chat = () => {\r\n  const {chatId}=useParams()\r\n  const rooms=useRooms()\r\n\r\n  if(!rooms){\r\n    return <Loader center vertical size='md' content=\"loading\" speed='slow'/>\r\n  }\r\n  const currentroom=rooms.find(room=>room.id===chatId)\r\n  if(!currentroom)\r\n  {\r\n    return <h6 className=\"text-center mt-page\">chat {chatId} not found</h6>\r\n  }\r\n\r\n  const {name,description}=currentroom;\r\n  const admins=transferar(currentroom.admins)\r\n  const isAdmin=admins.includes(auth.currentUser.uid)\r\n\r\n  const Currentroomdata={\r\n    name,description,admins,isAdmin\r\n  }\r\n\r\n \r\n  \r\n  return (\r\n    <CurrentRoomProvider DATa={Currentroomdata}>\r\n    <div className=\"chat-top\">\r\n        <ChatTop />\r\n      </div>\r\n      <div className=\"chat-middle\">\r\n        <Messages />\r\n      </div>\r\n      <div className=\"chat-bottom\">\r\n        <ChatBottom />\r\n      </div>\r\n    </CurrentRoomProvider>\r\n  )\r\n}\r\n\r\nexport default Chat\r\n","\r\nimport React from 'react'\r\nimport { Col, Grid, Row } from 'rsuite'\r\nimport {Switch,Route, useRouteMatch} from 'react-router-dom'\r\nimport Sidebar from '../../Components/Sidebar'\r\nimport {RoomsProvider} from '../../context/room.context'\r\nimport Chat from './Chat'\r\nimport { useMediaQuery } from '../../misc/Customhook'\r\n\r\nconst Home = () => {\r\nconst isdesktop=useMediaQuery('(min-width: 992px)')\r\nconst { isExact }=useRouteMatch()\r\n \r\nconst cansidebar=isdesktop || isExact\r\n\r\n  return (\r\n    <RoomsProvider>\r\n   <Grid fluid className=\"h-100\">\r\n     <Row className=\"h-100\">\r\n       {cansidebar && <Col className=\"h-100\" xs={24} md={8}>\r\n        <Sidebar />\r\n       </Col>}\r\n       <Switch>\r\n         <Route exact path=\"/chat/:chatId\">\r\n           <Col xs={24} md={16} className=\"h-100\">\r\n             <Chat />\r\n           </Col>\r\n         </Route>\r\n         <Route>\r\n           {isdesktop && <Col xs={24} md={16} className=\"h-100\">\r\n             <h6 className=\"text-center mt-page\"> Please Select chat </h6>\r\n             </Col>}\r\n         </Route>\r\n       </Switch>\r\n     </Row>\r\n   </Grid>\r\n   </RoomsProvider>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","/* eslint-disable arrow-body-style */\r\nimport React from 'react';\r\nimport firebase from 'firebase/app'\r\nimport { Alert, Button, Col, Container, Grid, Icon, Panel, Row } from 'rsuite'\r\nimport {auth, database} from '../misc/firebase'\r\n\r\n\r\n\r\nconst SignIn = () => {\r\n\r\n  const signInWithProvider = async provider => {\r\n    try {\r\n      const { additionalUserInfo, user } = await auth.signInWithPopup(provider);\r\n\r\n      if (additionalUserInfo.isNewUser) {\r\n        await database.ref(`/profiles/${user.uid}`).set({\r\n          name: user.displayName,\r\n          createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n        });\r\n      }\r\n\r\n      Alert.success('Signed in', 4000);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n\r\n  const GoogleSignin=()=>{\r\n    signInWithProvider(new firebase.auth.GoogleAuthProvider())\r\n  }\r\n\r\n  const FacebookSignin=()=>{\r\n    signInWithProvider(new firebase.auth.FacebookAuthProvider())\r\n  }\r\n  return (\r\n    <Container >\r\n    <Grid className=\"mt-page\"> \r\n     <Row>\r\n       <Col xs={24}   md={12} mdOffset={6} >\r\n         <Panel>\r\n           <div className=\"text-center\">\r\n             <h2>Welcome To Chat</h2>\r\n             <p>Progressive chat platform for neophytes</p>\r\n           </div>\r\n           <div className=\"mt-3\">\r\n            <Button block color=\"blue\" onClick={FacebookSignin}><Icon icon=\"facebook\"  /> Continue With Facebook </Button>\r\n            <Button block color=\"green\" onClick={GoogleSignin}><Icon icon=\"google\"  />  Continue With Google </Button>\r\n           </div>\r\n         </Panel>\r\n       </Col>\r\n     </Row>\r\n     </Grid> \r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SignIn\r\n","import React from 'react';\nimport { Switch} from 'react-router';\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport PrivateRoute from './Components/PrivateRoute';\nimport PublicRoute from './Components/PublicRoute';\nimport { ProfileProvider } from './context/profile.context';\nimport Home from './Pages/Home';\nimport SignIn from './Pages/SignIn';\nimport './styles/main.scss'\n\n\nfunction App() {\n  return(\n<ProfileProvider>\n<Switch>\n  <PublicRoute path='/signin'>\n     <SignIn />\n  </PublicRoute>\n  <PrivateRoute path='/'>\n     <Home />\n  </PrivateRoute>\n</Switch>\n</ProfileProvider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render( \n<BrowserRouter>\n<App />\n</BrowserRouter> ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}